{
    "defaults_comment"    : "These are descriptions of the default parameters in the defaults.json file.  This file is for information only and does not feed data to the model",
    "includes"            : [
        "a list of spice file that need to be included for the sim"
    ],
    "analysis"            : "spice analysis type.  ac is the only option right now",
    "nodes"               : "specify the number of nodes.  This parameter needs to be >=2",
    "length"              : "length of the mixing segment",
    "random_attach"       : "if this is set to True, then the nodes will be attached to the mixing segment at random places. This will be overriden if \"attach_points\" is specified",
    "start_attach"        : "Specify a number of nodes to be placed at the beginning of the mixing segment with 'serparation_min' spacing. This will be overriden if \"attach_points\" is specified",
    "end_attach"          : "Specify a number of nodes to be placed at the end of the mixing segment with 'serparation_min' spacing. This will be overriden if \"attach_points\" is specified",
    "start_pad"           : "Specify the distance between the start termination of the mixing segment and the first node. This will be overriden if \"attach_points\" is specified",
    "end_pad"             : "Specify the distance between the end termination of the mixing segment and the last node. This will be overriden if \"attach_points\" is specified",
    "separation_min"      : "Minimum Separation distance between nodes",
    "segments_per_meter"  : "Number of lump model segments per meter for transmission line modeling",
    "drop_max"            : "Maximum Drop length between mixing segment and a node's interface",
    "random_drop"         : "If set to true, nodes will be assigned a random drop length limited by the parameter 'drop_max'",
    "seed"                : "Specify a seed number for the random number generator.  Set to -1 for a random seed",
    "tx_node"             : "Specify the node number to treat as the transmitting node",
    "attach_error"        : "add gaussian error to attachment points.  Pass the the sigma value of the attachment error or 0 for no error.  Ignored for randomly placed nodes.  If 'attach_error' is set to a large value, can separation_min be violated? I don't know",
    "attach_points"       : "specify a list of values describing the node attachment points, or null if node attachements should be specified by other parameters.  If a list of values is specified, other parameters such as 'nodes', 'start_attach', 'end_pad', etc, will be ignored.",
    "noautoscale"         : "Set this to true to lock the y-axis on RL plots to [+10db:-20dB].  False lets the graph choose the scaling",
    "noplot"              : "Set this to true to stop the program from displaying the plots.  Use this when the desired output is a png - like when making gifs.",
    "plot_png_filename"   : "Example: zcable.png - The name of png output if 'noplot' = true",
    "default_termination" : {
        "comment"         : "cmatch declares how well the terminations match (in pct), 0 means perfet match. -1 means ccn is 1% high, ccp i 1% low",
        "rterm"           : "termination resistance",
        "rtol"            : "Tolerance on termination resistance, here for future expansion, not currently used",
        "ccouple"         : "Value of dc blocking caps for the termination resistors",
        "cmatch"          : "Use this to skew the dc blocking cap values. 0.01 means cap_p is 1% hight and cap_n is 1% low.  0.00 means the caps match without error."
    },
    "default_node" : 
    {  
        "drop_length"     : "length between the mixing segment and the node interface",
        "random_drop"     : "if set to true, a ranom drop lenght will be chosen",
        "cnode"           : "Parasitic capacitance at the node interface",
        "lcomp"           : "Inductance that compensates the parasitic capacitance",
        "lpodl"           : "Power coupling inductance",
        "rnode"           : "Parallel resistance at the node interface (models right now have this resistance follow the coupling caps)",
        "lcomp_match"     : "Compensation inductance matching.  0 means perfectly matched, 1 means positive side lcomps are 1% high and neg side lcomps are 1% low",
        "spice_model"     : "specify a custom spice model for the node.  default is called 'node'",
        "drop_model"      : "specify a custom cable model for the drop length, this is here for future expansion but doesn't have an effect yet"
    },
    "default_segment" :
    {
        "model"           : "chose one of the models in 'cable model' section",
        "gauge"           : "mixing segment model gauge, informational only",
        "Zo"              : "Impedance of the cable model.  If set to null the model values will dictate the characteristic impedance.  If set to a value e.g. 96, the L and C values will be pulled so that the characteristic impedance matches the requested impedance",
        "spice_model"     : "specify a spice model name for the lumped segment transmission line models, default is tlump"
    },
    "cable_models" :
    {
        "panduit_18g" : 
        {
            "name"        : "panduit_18g",
            "comment"     : "#18 gauge cable. Original data was for a 5cm segment.  Divide by ref_length to get 1m referenced values.", 
            "gauge"       : 18,
            "ref_length"  : 0.05,
            "rskin"       : 1.134268e-5,
            "l"           : 20.6435e-9 ,
            "c"           : 2.25026e-12,
            "rdc"         : 0.0094
        },
        "random_cable" : 
        {
            "comment"     : "This is a random set of number used to test the model's parser", 
            "gauge"       : 18,
            "ref_length"  : 0.05,
            "rskin"       : 2e-5,
            "l"           : 20e-9 ,
            "c"           : 2e-12,
            "rdc"         : 0.01
        }
    },
    "node_descriptions" : [],
    "trunk_description" : {
        "segments" : []
    }
}
